<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3
<twitter4j.auth.OAuth2Authorization: void setOAuthConsumer(java.lang.String,java.lang.String)>|0,1
<dalvik.system.BaseDexClassLoader: void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>|0
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)>|0
<dalvik.system.BaseDexClassLoader: java.net.URL findResource(java.lang.String)>|0
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>|0
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>|0
<org.apache.http.client.utils.URLEncodedUtils: void parse(java.util.List,java.util.Scanner,java.lang.String)>|2
<winterwell.jtwitter.OAuthSignpostClient: void <init>(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<org.apache.catalina.authenticator.AuthenticatorBase: void register(org.apache.catalina.connector.Request,jakarta.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>|3,4,5
<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBuilder setOAuthAppSecret(java.lang.String)>|0
<org.apache.commons.httpclient.HttpsURL: void <init>(org.apache.commons.httpclient.HttpsURL,java.lang.String)>|1
<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[])>|0
<twitter4j.auth.OAuthAuthorization: void setOAuthConsumer(java.lang.String,java.lang.String)>|0,1
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(java.lang.String)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(char[],java.lang.String)>|1
<java.lang.System: void load(java.lang.String)>|0
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3
<android.net.Uri: android.net.Uri fromFile(java.io.File)>|0
<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>|0
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>|0
<org.apache.commons.httpclient.URI: void parseAuthority(java.lang.String,boolean)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>|0,2,3
<android.webkit.WebView: java.lang.String findAddress(java.lang.String)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>|0,1,3,4,5
<org.apache.catalina.Authenticator: void login(java.lang.String,java.lang.String,org.apache.catalina.connector.Request)>|0,1
<android.content.Context: boolean deleteFile(java.lang.String)>|0
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.util.Properties)>|0
<java.io.File: void <init>(java.lang.String,java.lang.String)>|0,1
<twitter4j.auth.OAuth2Support: void setOAuthConsumer(java.lang.String,java.lang.String)>|0,1
<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBuilder setOAuthAppId(java.lang.String)>|0
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3,4
<java.io.File: void <init>(java.io.File,java.lang.String)>|0,1
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>|0
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>|0
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>|0
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>|0,1,3,4
<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<org.apache.commons.httpclient.URI: void <init>(org.apache.commons.httpclient.URI,java.lang.String)>|1
<dalvik.system.BaseDexClassLoader: java.lang.String findLibrary(java.lang.String)>|0
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>|1,3,5,6,7,8
<org.apache.commons.httpclient.HttpURL: void setQuery(java.lang.String,java.lang.String)>|0,1
<android.app.Activity: void startActivity(android.content.Intent)>|0
<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3
<twitter4j.auth.OAuthSupport: void setOAuthConsumer(java.lang.String,java.lang.String)>|0,1
<java.sql.Statement: boolean execute(java.lang.String)>|0
<java.io.FileInputStream: void <init>(java.lang.String)>|0
<org.apache.commons.httpclient.URI: void setQuery(java.lang.String)>|0
<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>|0
<java.io.FileInputStream: void <init>(java.io.File)>|0
<android.content.ContextWrapper: void startActivity(android.content.Intent,android.os.Bundle)>|0
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>|0
<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String)>|0,1
<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>|0,1,2
<java.sql.Statement: int executeUpdate(java.lang.String,int[])>|0
<twitter4jads.conf.ConfigurationBuilder: twitter4jads.conf.ConfigurationBuilder setPassword(java.lang.String)>|0
<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>|0
<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>|0
<java.sql.Statement: int executeUpdate(java.lang.String,java.lang.String[])>|0
<org.apache.commons.httpclient.URI: void setFragment(java.lang.String)>|0
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>|0
<org.apache.commons.httpclient.HttpURL: void setPassword(java.lang.String)>|0
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)>|0
<java.lang.Class: java.net.URL getResource(java.lang.String)>|0
<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>|0,2
<org.apache.commons.httpclient.HttpsURL: void <init>(char[],java.lang.String)>|1
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>|0
<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>|0,1,3
<java.io.FileOutputStream: void <init>(java.lang.String)>|0
<android.webkit.WebView: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)>|0
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPassword(java.lang.String)>|0
<java.lang.ClassLoader: java.lang.Class findLoadedClass(java.lang.String)>|0
<java.lang.Runtime: void load(java.lang.String)>|0
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<org.apache.commons.httpclient.HttpURL: void setUserinfo(java.lang.String,java.lang.String)>|0,1
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>|0,1
<android.content.ContextWrapper: boolean deleteFile(java.lang.String)>|0
<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>|0,1
<org.apache.commons.httpclient.URI: void <init>(java.lang.String)>|0
<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>|0,1,2,4,5
<java.io.FileOutputStream: void <init>(java.io.File)>|0
<org.apache.commons.httpclient.URI: void setEscapedAuthority(java.lang.String)>|0
<java.lang.ClassLoader: java.net.URL findResource(java.lang.String)>|0
<java.net.URLClassLoader: java.lang.Class findClass(java.lang.String)>|0
<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>|0
<java.net.URI: void <init>(java.lang.String)>|0
<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>|0
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>|0
<java.sql.Statement: boolean execute(java.lang.String,java.lang.String[])>|0
<java.lang.Runtime: void loadLibrary(java.lang.String)>|0
<java.net.URLClassLoader: java.util.Enumeration findResources(java.lang.String)>|0
<facebook4j.conf.ConfigurationBase: void setOAuthAppId(java.lang.String)>|0
<javax.mail.PasswordAuthentication: void <init>(java.lang.String,java.lang.String)>|0,1
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>|0,1
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>|0
<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3,4
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>|0
<org.apache.commons.httpclient.URI: void setDefaultProtocolCharset(java.lang.String)>|0
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>|0,1,2
<org.apache.http.auth.UsernamePasswordCredentials: void <init>(java.lang.String,java.lang.String)>|0,1
<org.apache.commons.httpclient.URI: java.lang.String decode(java.lang.String,java.lang.String)>|0,1
<java.lang.Class: java.lang.Class forName(java.lang.String)>|0
<org.apache.commons.net.ftp.FTPClient: boolean login(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3,4
<java.lang.ClassLoader: java.lang.String findLibrary(java.lang.String)>|0
<android.net.Uri: android.net.Uri parse(java.lang.String)>|0
<org.apache.http.client.methods.HttpGet: void <init>(java.net.URI)>|0
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>|0
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>|0
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>|0,1,2
<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])>|0
<org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>|1
<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3,4
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String)>|0
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)>|0
<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<org.apache.http.auth.NTCredentials: void <init>(java.lang.String)>|0
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>|0
<org.apache.commons.httpclient.URI: void setEscapedFragment(java.lang.String)>|0
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>|0
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>|0,1,2,4,5
<java.lang.ClassLoader: java.util.Enumeration findResources(java.lang.String)>|0
<android.content.ContextWrapper: void startActivity(android.content.Intent)>|0
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,4,5,6
<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)>|0
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>|0,1,3
<org.apache.commons.httpclient.HttpURL: void setEscapedPassword(java.lang.String)>|0
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>|0
<twitter4jads.auth.OAuthAuthorization: void setOAuthConsumer(java.lang.String,java.lang.String)>|0,1
<com.restfb.DefaultFacebookClient: com.restfb.FacebookClient$AccessToken obtainExtendedAccessToken(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>|0,1,2,4,5
<java.lang.System: void loadLibrary(java.lang.String)>|0
<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<java.security.SecureClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,int,java.lang.String)>|0,2
<dalvik.system.BaseDexClassLoader: java.util.Enumeration findResources(java.lang.String)>|0
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>|0
<twitter4jads.auth.OAuthSupport: void setOAuthConsumer(java.lang.String,java.lang.String)>|0,1
<java.net.Socket: void <init>(java.lang.String,int)>|0
<software.amazon.awssdk.auth.credentials.AwsSessionCredentials: software.amazon.awssdk.auth.credentials.AwsSessionCredentials create(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>|0,1,3,4,5
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>|0,2,3
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)>|0
<com.restfb.DefaultFacebookClient: com.restfb.FacebookClient$AccessToken obtainUserAccessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3
<java.net.Socket: void <init>(java.lang.String,int,boolean)>|0
<java.io.File: void <init>(java.net.URI)>|0
<java.net.URL: void <init>(java.net.URL,java.lang.String)>|0,1
<java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])>|0
<org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.lang.String,java.nio.charset.Charset,char[])>|0
<facebook4j.conf.ConfigurationBase: void setOAuthAppSecret(java.lang.String)>|0
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>|0
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3,4
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>|0,1
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>|0,2
<org.apache.commons.httpclient.HttpURL: void <init>(org.apache.commons.httpclient.HttpURL,java.lang.String)>|1
<winterwell.jtwitter.OAuthSignpostClient: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>|0
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3
<twitter4j.TwitterBaseImpl: void setOAuthConsumer(java.lang.String,java.lang.String)>|0,1
<org.apache.commons.httpclient.URI: void <init>(org.apache.commons.httpclient.URI,java.lang.String,boolean)>|1
<org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.net.URI,java.nio.charset.Charset)>|0
<twitter4jads.conf.ConfigurationBuilder: twitter4jads.conf.ConfigurationBuilder setOAuthConsumerSecret(java.lang.String)>|0
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>|0
<org.apache.catalina.authenticator.FormAuthenticator: void register(org.apache.catalina.connector.Request,jakarta.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>|3,4,5
<java.net.URLClassLoader: java.net.URL findResource(java.lang.String)>|0
<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>|0
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>|0
<org.apache.http.auth.UsernamePasswordCredentials: void <init>(java.lang.String)>|0
<java.lang.ClassLoader: java.lang.Class findSystemClass(java.lang.String)>|0
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>|0
<android.webkit.WebView: void loadUrl(java.lang.String)>|0
<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>|2
<android.net.Uri: java.lang.String decode(java.lang.String)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String)>|0
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>|0
<org.apache.commons.httpclient.URI: void <init>(java.lang.String,boolean)>|0
<dalvik.system.BaseDexClassLoader: java.lang.Package getPackage(java.lang.String)>|0
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>|0
<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.ClassLoader)>|0
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,int)>|0
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>|0,1,2,4
<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>|0
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>|0
<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,4,5,6
<org.apache.http.client.utils.URLEncodedUtils: void parse(java.util.List,java.util.Scanner,java.lang.String,java.lang.String)>|2,3
<twitter4jads.conf.ConfigurationBuilder: twitter4jads.conf.ConfigurationBuilder setOAuthConsumerKey(java.lang.String)>|0
<java.sql.Statement: int executeUpdate(java.lang.String,int)>|0
<dalvik.system.BaseDexClassLoader: java.lang.Class findClass(java.lang.String)>|0
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder username(java.lang.String)>|0
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,2,4,5,6,7
<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>|0
<org.apache.commons.httpclient.URI: void setPath(java.lang.String)>|0
<android.webkit.WebView: void saveWebArchive(java.lang.String)>|0
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>|0
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>|0
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>|0,2,4,5,6
<android.content.ContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>|0
<com.restfb.DefaultFacebookClient: java.lang.String obtainAppSecretProof(java.lang.String,java.lang.String)>|0,1
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>|0
<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)>|0
<org.apache.commons.httpclient.URI: void <init>(char[],java.lang.String)>|1
<com.restfb.DefaultFacebookClient: com.restfb.FacebookClient$AccessToken obtainAppAccessToken(java.lang.String,java.lang.String)>|0,1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)>|0
<org.apache.commons.httpclient.URI: void setDefaultDocumentCharset(java.lang.String)>|0
<org.apache.commons.httpclient.HttpURL: void setUser(java.lang.String)>|0
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String)>|0
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>|0
<java.sql.Statement: boolean execute(java.lang.String,int[])>|0
<org.apache.http.auth.NTCredentials: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)>|1
<org.apache.catalina.authenticator.AuthenticatorBase: void login(java.lang.String,java.lang.String,org.apache.catalina.connector.Request)>|0,1
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>|0,1,3
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>|0,1
<java.net.URL: void <init>(java.lang.String)>|0
<facebook4j.FacebookBaseImpl: void setOAuthAppId(java.lang.String,java.lang.String)>|0,1
<com.restfb.DefaultFacebookClient: java.util.List convertSessionKeysToAccessTokens(java.lang.String,java.lang.String,java.lang.String[])>|0,1
<java.sql.Statement: boolean execute(java.lang.String,int)>|0
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,int,java.lang.String)>|0,2
<java.net.Socket: void <init>(java.lang.String,int,java.net.InetAddress,int)>|0
<java.lang.Runtime: java.lang.Process exec(java.lang.String)>|0
<twitter4j.auth.BasicAuthorization: void <init>(java.lang.String,java.lang.String)>|0,1
<com.google.api.client.auth.oauth2.ClientParametersAuthentication: void <init>(java.lang.String,java.lang.String)>|0,1
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String)>|0,1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|1,3,5,6,7,8
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(java.lang.String)>|0
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,4,5,6
<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)>|0
<android.content.ContextWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>|0
<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>|0,1,2,4
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String)>|0,1
<org.apache.commons.net.ftp.FTPClient: boolean login(java.lang.String,java.lang.String)>|0,1
<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>|0
<org.apache.commons.httpclient.URI: void <init>(java.lang.String,boolean,java.lang.String)>|0,2
<twitter4jads.auth.BasicAuthorization: void <init>(java.lang.String,java.lang.String)>|0,1
<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>|0,1,3
<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>|0
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>|0
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder password(java.lang.String)>|0
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>|0
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>|0
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>|0
<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)>|0
<java.sql.Statement: int executeUpdate(java.lang.String)>|0
<com.restfb.DefaultFacebookClient: com.restfb.FacebookClient$AccessToken obtainExtendedAccessToken(java.lang.String,java.lang.String)>|0,1
<java.io.File: void <init>(java.lang.String)>|0
<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>|0
<java.security.SecureClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.CodeSource)>|0
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>|0
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>|0
<android.content.Context: java.io.File getDir(java.lang.String,int)>|0
<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>|0
<org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.net.URI,java.lang.String)>|0,1
<org.apache.commons.httpclient.HttpURL: void setEscapedUser(java.lang.String)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>|0,1,2,4
<twitter4jads.conf.ConfigurationBuilder: twitter4jads.conf.ConfigurationBuilder setUser(java.lang.String)>|0
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>|0
<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<org.apache.commons.httpclient.URI: void setEscapedPath(java.lang.String)>|0
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>|1
<org.apache.commons.httpclient.HttpURL: void setEscapedUserinfo(java.lang.String,java.lang.String)>|0,1
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,java.lang.String)>|0,1,2
<org.apache.http.client.methods.HttpPost: void <init>(java.net.URI)>|0
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>|0
<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>|0,1,3,4
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,4,5,6
<org.apache.commons.httpclient.URI: void setEscapedQuery(java.lang.String)>|0
<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>|0
<org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.lang.String,java.nio.charset.Charset)>|0
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>|0
<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>|0,1,2,3
<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>|0